/**
 *  Instead of buttons, users encounter drop downs, each containing a series of options:
 *  perhaps a list of fellow members, a list of Slack channels, or a simple list of actions
 *  you provide while creating the message. Message menus can even be dynamically populated
 *  with options based on your server's response.
 *
 *  @typedef {object} attachmentActionSelect
 *  @property {string} type            For message menus, this value is `select`.
 *  @property {string} name            Provide a string to give this specific action a name.
 *                                     The name will be returned to your Action URL along
 *                                     with the message's `callback_id` when this action is
 *                                     invoked. Use it to identify this particular response
 *                                     path. **If multiple actions share the same name, only
 *                                     one of them can be in a triggered state.**
 *  @property {string} text            The user-facing label for the `select` representing this
 *                                     action. Cannot contain markup. Best to keep these short
 *                                     and decisive. Use a maximum of 30 characters or so for
 *                                     best results across form factors.
 *  @property {attachmentActionConfirmation} [confirm] If you provide a JSON hash of
 *                                     confirmation fields, your button or menu will pop up
 *                                     a dialog with your indicated text and choices, giving
 *                                     them one last chance to avoid a destructive action or
 *                                     other undesired outcome.
 *  @property {array.<attachmentActionSelectOption>} [options] Used only with message menus.
 *                                     The individual options to appear in this menu,
 *                                     provided as an array of option fields. Required
 *                                     when `data_source` is `static` or otherwise unspecified.
 *                                     A maximum of 100 options can be provided in each
 *                                     menu.
 *  @property {array.<attachmentActionSelectOptionGroup>} [option_groups] Used only with
 *                                     message menus. An alternate, semi-hierarchal way to list
 *                                     available options. Provide an array of option group
 *                                     definitions. This replaces and supersedes the `options` array.
 *  @property {string} [data_source]   Accepts `static`, `users`, `channels`, `conversations`, or
 *                                     `external`. Our clever default behavior is `static`,
 *                                     which means the menu's options are provided directly
 *                                     in the posted message under `options`. Defaults to
 *                                     `static`. Example: `"channels"`
 *  @property {array} [selected_options] If provided, the first element of this array will be
 *                                     set as the pre-selected option for this menu. Any
 *                                     additional elements will be ignored.
 *  The selected option's `value` field is contextual based on menu type and is always required:
 *    - For menus of type `static` (the default) this should be in the list of options included in
 *      the action.
 *    - For menus of type `users`, `channels`, or `conversations`, this should be a valid ID of
 *      the corresponding type.
 *    - For menus of type `external` this can be any value, up to a couple thousand characters.
 *  @property {integer} [min_query_length] Only applies when `data_source` is set to `external`. If
 *                                     present, Slack will wait till the specified number of
 *                                     characters are entered before sending a request to your
 *                                     app's external suggestions API endpoint. Defaults to `1`.
 */
